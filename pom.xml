<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <groupId>com.ximalaya</groupId>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>xlink</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <modules>
        <module>xlink-1.6.2</module>
    </modules>

    <build>
        <plugins>
            <!--
            We need to include this here because some of our modules have transitive dependencies
            on jdbm1, which is of type "bundle". This only works if you include the
            maven-bundle-plugin (see https://issues.apache.org/jira/browse/DIRSHARED-134). We need
            the plugin in the root pom because Javadoc aggregation runs only in the root pom and
            not the specific poms. Not having this here was the cause for FLINK-7702.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.0.1</version>
                <inherited>true</inherited>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>0.12</version><!--$NO-MVN-MAN-VER$-->
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludeSubProjects>false</excludeSubProjects>
                    <numUnapprovedLicenses>0</numUnapprovedLicenses>
                    <licenses>
                        <!-- Enforce this license:
                            Licensed to the Apache Software Foundation (ASF) under one
                            or more contributor license agreements.  See the NOTICE file
                            distributed with this work for additional information
                            regarding copyright ownership.  The ASF licenses this file
                            to you under the Apache License, Version 2.0 (the
                            "License"); you may not use this file except in compliance
                            with the License.  You may obtain a copy of the License at
                              http://www.apache.org/licenses/LICENSE-2.0
                            Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed on an
                            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
                            KIND, either express or implied.  See the License for the
                            specific language governing permissions and limitations
                            under the License.
                        -->
                        <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                            <licenseFamilyCategory>AL2 </licenseFamilyCategory>
                            <licenseFamilyName>Apache License 2.0</licenseFamilyName>
                            <notes />
                            <patterns>
                                <pattern>Licensed to the Apache Software Foundation (ASF) under one</pattern>
                            </patterns>
                        </license>
                    </licenses>
                    <licenseFamilies>
                        <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
                            <familyName>Apache License 2.0</familyName>
                        </licenseFamily>
                    </licenseFamilies>
                    <excludes>
                        <!-- Additional files like .gitignore etc.-->
                        <exclude>**/.*/**</exclude>
                        <exclude>**/*.prefs</exclude>
                        <exclude>**/*.log</exclude>
                        <!-- External web libraries. -->
                        <exclude>docs/**/jquery*</exclude>
                        <exclude>docs/**/bootstrap*</exclude>
                        <exclude>docs/Gemfile.lock</exclude>
                        <exclude>docs/ruby2/Gemfile.lock</exclude>
                        <exclude>docs/img/*.svg</exclude>
                        <exclude>**/docs/page/font-awesome/**</exclude>
                        <exclude>**/resources/**/font-awesome/**</exclude>
                        <exclude>**/resources/**/jquery*</exclude>
                        <exclude>**/resources/**/bootstrap*</exclude>
                        <exclude>flink-clients/src/main/resources/web-docs/js/*d3.js</exclude>

                        <!-- the licenses that are re-bundled -->
                        <exclude>**/packaged_licenses/LICENSE.*.txt</exclude>
                        <exclude>**/licenses/LICENSE*</exclude>
                        <exclude>**/licenses-binary/LICENSE*</exclude>

                        <!-- web dashboard config JSON files -->
                        <exclude>flink-runtime-web/web-dashboard/package.json</exclude>
                        <exclude>flink-runtime-web/web-dashboard/bower.json</exclude>

                        <!-- web dashboard files under 3rd party license -->
                        <exclude>flink-runtime-web/web-dashboard/vendor-local/d3-timeline.js</exclude>
                        <exclude>flink-runtime-web/web-dashboard/assets/fonts/FontAwesome.otf</exclude>
                        <exclude>flink-runtime-web/web-dashboard/assets/fonts/fontawesome*</exclude>

                        <!-- web dashboard non-binary image assets -->
                        <exclude>flink-runtime-web/web-dashboard/assets/images/manifest.json</exclude>
                        <exclude>flink-runtime-web/web-dashboard/assets/images/safari-pinned-tab.svg</exclude>

                        <!-- generated contents -->
                        <exclude>flink-runtime-web/web-dashboard/web/**</exclude>

                        <!-- downloaded and generated web libraries. -->
                        <exclude>flink-runtime-web/web-dashboard/node_modules/**</exclude>
                        <exclude>flink-runtime-web/web-dashboard/bower_components/**</exclude>
                        <exclude>flink-runtime-web/web-dashboard/tmp/**</exclude>

                        <!-- Test Data. -->
                        <exclude>flink-tests/src/test/resources/testdata/terainput.txt</exclude>
                        <exclude>flink-formats/flink-avro/src/test/resources/flink_11-kryo_registrations</exclude>
                        <exclude>flink-runtime/src/test/resources/flink_11-kryo_registrations</exclude>
                        <exclude>flink-core/src/test/resources/kryo-serializer-config-snapshot-v1</exclude>
                        <exclude>flink-formats/flink-avro/src/test/resources/avro/*.avsc</exclude>
                        <exclude>out/test/flink-avro/avro/user.avsc</exclude>
                        <exclude>flink-libraries/flink-table/src/test/scala/resources/*.out</exclude>
                        <exclude>flink-yarn/src/test/resources/krb5.keytab</exclude>
                        <exclude>flink-end-to-end-tests/test-scripts/test-data/*</exclude>
                        <exclude>flink-end-to-end-tests/test-scripts/docker-hadoop-secure-cluster/config/keystore.jks</exclude>

                        <!-- snapshots -->
                        <exclude>**/src/test/resources/*-snapshot</exclude>
                        <exclude>**/src/test/resources/*.snapshot</exclude>
                        <exclude>**/src/test/resources/*-savepoint</exclude>
                        <exclude>flink-core/src/test/resources/serialized-kryo-serializer-1.3</exclude>
                        <exclude>flink-core/src/test/resources/type-without-avro-serialized-using-kryo</exclude>
                        <exclude>flink-formats/flink-avro/src/test/resources/flink-1.4-serializer-java-serialized</exclude>

                        <exclude>flink-formats/flink-avro/src/test/resources/testdata.avro</exclude>
                        <exclude>flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/generated/*.java</exclude>
                        <exclude>flink-formats/flink-parquet/src/test/java/org/apache/flink/formats/parquet/generated/*.java</exclude>
                        <exclude>flink-formats/flink-parquet/src/test/resources/avro/**</exclude>
                        <exclude>flink-libraries/flink-python/src/test/python/org/apache/flink/python/api/data_csv</exclude>
                        <exclude>flink-libraries/flink-python/src/test/python/org/apache/flink/python/api/data_text</exclude>
                        <!-- netty test file, still Apache License 2.0 but with a different header -->
                        <exclude>flink-runtime/src/test/java/org/apache/flink/runtime/io/network/buffer/AbstractByteBufTest.java</exclude>
                        <!-- Configuration Files. -->
                        <exclude>**/flink-bin/conf/slaves</exclude>
                        <exclude>**/flink-bin/conf/masters</exclude>
                        <!-- Administrative files in the main trunk. -->
                        <exclude>**/README.md</exclude>
                        <exclude>.github/**</exclude>
                        <!-- Build files -->
                        <exclude>**/*.iml</exclude>
                        <exclude>flink-quickstart/**/testArtifact/goal.txt</exclude>
                        <!-- Generated content -->
                        <exclude>out/**</exclude>
                        <exclude>**/target/**</exclude>
                        <exclude>docs/content/**</exclude>
                        <exclude>**/scalastyle-output.xml</exclude>
                        <exclude>build-target/**</exclude>
                        <exclude>docs/_includes/generated/**</exclude>
                        <!-- Tools: watchdog -->
                        <exclude>tools/artifacts/**</exclude>
                        <exclude>tools/flink*/**</exclude>
                        <!-- artifacts created during release process -->
                        <exclude>tools/releasing/release/**</exclude>
                        <!-- manually installed version on travis -->
                        <exclude>apache-maven-3.2.5/**</exclude>
                        <!-- PyCharm -->
                        <exclude>**/.idea/**</exclude>
                        <!-- Generated code via Avro -->
                        <exclude>flink-end-to-end-tests/flink-confluent-schema-registry/src/main/java/example/avro/**</exclude>
                        <exclude>flink-end-to-end-tests/flink-datastream-allround-test/src/main/java/org/apache/flink/streaming/tests/avro/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
            <!--</plugin>-->
            <plugin>
                <!-- just define the Java version to be used for compiling and plugins -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!-- The semantics of this option are reversed, see MCOMPILER-209. -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <compilerArgs>
                        <!-- The output of Xlint is not shown by default, but we activate it for the QA bot
                        to be able to get more warnings -->
                        <arg>-Xlint:all</arg>
                        <!-- Prevents recompilation due to missing package-info.class, see MCOMPILER-205 -->
                        <arg>-Xpkginfo:always</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!--surefire for unit tests and integration tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- Do NOT use a version >=2.19.X, as test cases may get stuck before execution. See SUREFIRE-1255 -->
                <version>2.18.1</version>
                <configuration>
                    <forkCount>${flink.forkCount}</forkCount>
                    <reuseForks>${flink.reuseForks}</reuseForks>
                    <systemPropertyVariables>
                        <forkNumber>0${surefire.forkNumber}</forkNumber>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                        <codebase>${codebase}</codebase>
                    </systemPropertyVariables>
                    <argLine>-Xms256m -Xmx2048m -Dmvn.forkNumber=${surefire.forkNumber} -XX:+UseG1GC</argLine>
                </configuration>
                <executions>
                    <!--execute all the unit tests-->
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*Test.*</include>
                            </includes>
                        </configuration>
                    </execution>
                    <!--execute all the integration tests-->
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*ITCase.*</include>
                            </includes>
                            <reuseForks>false</reuseForks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <classpathContainers>
                        <classpathContainer>
                            org.eclipse.jdt.launching.JRE_CONTAINER
                        </classpathContainer>
                    </classpathContainers>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <!-- enforce at least mvn version 3.0.3 -->
                                    <version>[3.0.3,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dependency-convergence</id>
                        <!-- disabled by default as it interacts badly with shade-plugin -->
                        <phase>none</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <dependencyConvergence/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- We use shading in all packages for relocating some classes, such as
                Guava and ASM.
                By doing so, users adding Flink as a dependency won't run into conflicts.
                (For example users can use whatever guava version they want, because we don't
                expose our guava dependency)
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>shade-flink</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadeTestJar>true</shadeTestJar>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                            <dependencyReducedPomLocation>${project.basedir}/target/dependency-reduced-pom.xml</dependencyReducedPomLocation>
                            <filters>
                                <!-- Globally exclude log4j.properties from our JAR files. -->
                                <filter>
                                    <artifact>*</artifact>
                                    <excludes>
                                        <exclude>log4j.properties</exclude>
                                        <exclude>log4j-test.properties</exclude>
                                    </excludes>
                                </filter>
                                <!-- drop entries into META-INF and NOTICE files for the dummy artifact -->
                                <filter>
                                    <artifact>org.apache.flink:force-shading</artifact>
                                    <excludes>
                                        <exclude>**</exclude>
                                    </excludes>
                                </filter>
                                <!-- io.netty:netty brings its own LICENSE.txt which we don't need -->
                                <filter>
                                    <artifact>io.netty:netty</artifact>
                                    <excludes>
                                        <exclude>META-INF/LICENSE.txt</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <includes>
                                    <!-- Unfortunately, the next line is necessary for now to force the execution
                                    of the Shade plugin upon all sub modules. This will generate effective poms,
                                    i.e. poms which do not contain properties which are derived from this root pom.
                                    In particular, the Scala version properties are defined in the root pom and without
                                    shading, the root pom would have to be Scala suffixed and thereby all other modules.
                                    -->
                                    <include>org.apache.flink:force-shading</include>
                                </includes>
                            </artifactSet>
                            <transformers combine.children="append">
                                <!-- The service transformer is needed to merge META-INF/services files -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- The ApacheNoticeResourceTransformer collects and aggregates NOTICE files -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <projectName>Apache Flink</projectName>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- generate configuration docs -->
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>0.1</version>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>highest-basedir</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>rootDir</property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>