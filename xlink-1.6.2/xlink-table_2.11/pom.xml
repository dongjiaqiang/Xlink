<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>com.ximalaya</groupId>
        <artifactId>xlink-1.6.2</artifactId>
        <version>1.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>xlink-table_2.11</artifactId>
    <version>1.6.2</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <hadoop.version>2.4.1</hadoop.version>
        <!-- Need to use a user property here because the surefire
             forkCount is not exposed as a property. With this we can set
             it on the "mvn" commandline in travis. -->
        <flink.forkCount>1C</flink.forkCount>
        <!-- Allow overriding the fork behaviour for the expensive tests in flink-tests
             to avoid process kills due to container limits on TravisCI -->
        <flink.forkCountTestPackage>${flink.forkCount}</flink.forkCountTestPackage>
        <flink.reuseForks>true</flink.reuseForks>
        <log4j.configuration>log4j-test.properties</log4j.configuration>
        <flink.shaded.version>4.0</flink.shaded.version>
        <guava.version>18.0</guava.version>
        <akka.version>2.4.20</akka.version>
        <java.version>1.8</java.version>
        <slf4j.version>1.7.7</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <!-- Overwrite default values from parent pom.
             Intellij is (sometimes?) using those values to choose target language level
             and thus is changing back to java 1.6 on each maven re-import -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <scala.macros.version>2.1.0</scala.macros.version>
        <!-- Default scala versions, may be overwritten by build profiles -->
        <scala.version>2.11.12</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <chill.version>0.7.4</chill.version>
        <zookeeper.version>3.4.10</zookeeper.version>
        <curator.version>2.12.0</curator.version>
        <jackson.version>2.7.9</jackson.version>
        <metrics.version>3.1.5</metrics.version>
        <prometheus.version>0.3.0</prometheus.version>
        <avro.version>1.8.2</avro.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <powermock.version>1.6.5</powermock.version>
        <hamcrest.version>1.3</hamcrest.version>
        <japicmp.skip>false</japicmp.skip>
        <codebase>new</codebase>
        <!--
            Keeping the MiniKDC version fixed instead of taking hadoop version dependency
            to support testing Kafka, ZK etc., modules that does not have Hadoop dependency
            Starting Hadoop 3, org.apache.kerby will be used instead of MiniKDC. We may have
            to revisit the impact at that time.
        -->
        <minikdc.version>2.7.2</minikdc.version>
        <generated.docs.dir>./docs/_includes/generated</generated.docs.dir>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.ximalaya</groupId>
            <artifactId>flink-dsl-stream-api</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- core dependencies -->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
            <version>1.6.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-shaded-jackson</artifactId>
            <scope>provided</scope>
            <version>2.7.9-4.0</version>
        </dependency>

        <!-- Used for base64 encoding of UDFs -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>

        <!-- Used for code generation -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <!-- Used for code generation -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>2.7.8</version>
        </dependency>


        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.beanshell</groupId>
            <artifactId>bsh</artifactId>
            <version>2.0b4</version>
        </dependency>

        <!-- Used for translation of table programs -->
        <dependency>
            <groupId>org.apache.calcite</groupId>
            <artifactId>calcite-core</artifactId>
            <!-- When updating the Calcite version, make sure to update the dependency exclusions -->
            <version>1.16.0</version>
            <exclusions>
                <!-- Dependencies that are not needed for how we use Calcite right now -->
                <exclusion>
                    <groupId>org.apache.calcite.avatica</groupId>
                    <artifactId>avatica-metrics</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcore</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-dbcp</groupId>
                    <artifactId>commons-dbcp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Used for date/time formatting -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.1</version>
        </dependency>

        <!-- test dependencies -->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils_${scala.binary.version}</artifactId>
            <version>1.6.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-tests_${scala.binary.version}</artifactId>
            <version>1.6-SNAPSHOT</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-core</artifactId>
            <version>1.6.2</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.apache.flink</groupId>-->
        <!--<artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>-->
        <!--<version>1.6.2</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
            <version>1.6.2</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime_${scala.binary.version}</artifactId>
            <version>1.6.2</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>2.0.2-beta</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Scala Compiler -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <!-- Run scala compiler in the process-resources phase, so that dependencies on
                        scala classes can be resolved later in the (Java) compile phase -->
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>

                    <!-- Run scala compiler in the process-test-resources phase, so that dependencies on
                         scala classes can be resolved later in the (Java) test-compile phase -->
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>shade-flink</id>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <!-- excluded all these files for a clean flink-table jar -->
                                        <exclude>org-apache-calcite-jdbc.properties</exclude>
                                        <exclude>common.proto</exclude>
                                        <exclude>requests.proto</exclude>
                                        <exclude>responses.proto</exclude>
                                        <exclude>mozilla/**</exclude>
                                        <exclude>codegen/**</exclude>
                                        <exclude>google/**</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>META-INF/services/java.sql.Driver</exclude>
                                        <exclude>properties.dtd</exclude>
                                        <exclude>PropertyList-1.0.dtd</exclude>
                                        <exclude>digesterRules.xml</exclude>
                                        <!-- not relocated for now, because it is needed by Calcite -->
                                        <!--<exclude>org.codehaus.commons.compiler.properties</exclude>-->
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <includes combine.children="append">
                                    <include>org.apache.calcite:*</include>
                                    <include>org.apache.calcite.avatica:*</include>

                                    <!-- Calcite's dependencies -->
                                    <include>com.google.guava:guava</include>
                                    <include>net.hydromatic:*</include>
                                    <include>com.esri.geometry:*</include>
                                    <include>commons-lang:*</include>

                                    <!-- flink-table dependencies -->
                                    <include>commons-codec:*</include>
                                    <include>org.apache.commons:commons-lang3</include>
                                    <include>org.codehaus.janino:*</include>
                                    <include>joda-time:*</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <!-- Calcite is not relocated for now, because we expose it at some locations such as CalciteConfig -->
                                <!--<relocation>
                                    <pattern>org.apache.calcite</pattern>
                                    <shadedPattern>org.apache.flink.calcite.shaded.org.apache.calcite</shadedPattern>
                                </relocation>-->

                                <!-- Calcite's dependencies -->
                                <relocation>
                                    <pattern>com.google</pattern>
                                    <shadedPattern>org.apache.flink.calcite.shaded.com.google</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.pentaho</pattern>
                                    <shadedPattern>org.apache.flink.calcite.shaded.org.pentaho</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.esri</pattern>
                                    <shadedPattern>org.apache.flink.calcite.shaded.com.esri</shadedPattern>
                                </relocation>

                                <!-- flink-table dependencies -->
                                <relocation>
                                    <pattern>org.joda.time</pattern>
                                    <shadedPattern>org.apache.flink.table.shaded.org.joda.time</shadedPattern>
                                </relocation>
                                <!-- not relocated for now, because we need to change the contents of the properties field otherwise -->
                                <!--<relocation>
                                    <pattern>org.codehaus</pattern>
                                    <shadedPattern>org.apache.flink.table.shaded.org.codehaus</shadedPattern>
                                </relocation>-->

                                <!-- commons-codec, commons-lang3, and commons-lang (from Calcite) -->
                                <relocation>
                                    <pattern>org.apache.commons</pattern>
                                    <shadedPattern>org.apache.flink.table.shaded.org.apache.commons</shadedPattern>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--&lt;!&ndash; Scala Code Style, most of the configuration done via plugin management &ndash;&gt;-->
            <!--<plugin>-->
            <!--<groupId>org.scalastyle</groupId>-->
            <!--<artifactId>scalastyle-maven-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<configLocation>${project.basedir}/../../tools/maven/scalastyle-config.xml</configLocation>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
